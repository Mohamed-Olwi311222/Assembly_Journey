program bitwise;
#include("stdlib.hhf");
var
    operand1 : int32;
    operand2 : int32;
    operator : char;
procedure Output_Binary(number : int32); 
begin Output_Binary;
    mov(32, ebx); /*for counter of the bits*/
    while (ebx > 0) do
        /*shift the given number by one each iteration to output the bit*/
        shl(1, number);

        /*get the MSB*/
        if (@c) then
            stdout.put("1");
        else
            stdout.put("0");
        endif;

        dec(ebx);
    endwhile;
    stdout.newln();
end Output_Binary;

begin bitwise;
    forever
        /*Initialize the 2 operands with 0*/
        mov(0, operand1);
        mov(0, operand2);
        stdout.put(nl, nl, "========================", nl);
        stdout.put("To exit presss Ctrl + C", nl);
        stdout.put("========================", nl, nl, nl);
        stdout.put("==============Input======================", nl);
        /*Get the 2 operands from user*/
        for(mov(1, bl); bl <= 2; add(1, bl)) do
            /*Push ebx to stack to save its status if and exception happens*/
            push(ebx);
            /*Dont stop until user enters the 2 valid operands*/
            forever
                try 
                    if (bl == 1) then
                        stdout.put("Enter 1st Operand (value-2147483648 to +2147483647): ");
                    elseif (bl == 2) then
                        stdout.put("Enter 2nd Operand (value-2147483648 to +2147483647): ");
                    endif;
                    /*Flush stdin if user entered multiple numbers with spaces in between*/
                    stdin.flushInput();
                    stdin.geti32();
                /*Break out and restore exception enviroment*/
                unprotected break;
                exception(ex.ValueOutOfRange);
                    stdout.put("Value is out of range");
                    stdout.newln();
                exception(ex.ConversionError);
                    stdout.put("Unknown value is entered please try again");
                    stdout.newln();
                endtry;
            endfor;
            /*Restore ebx status after exception handeling*/
            pop(ebx);
            if (bl = 1) then
                mov(eax, operand1);
            elseif (bl == 2) then
                mov(eax, operand2);
            endif;
            /*For Saftey store zero in eax if exception happens or multiple inputs is given to make sure all bits are zeros*/
            mov(0, eax);
        endfor;

        /*Get the bitwise operator from the user*/
        forever
            stdout.put("Please enter the operator", nl);
            stdout.put("xor => ^", nl);
            stdout.put("or => |", nl);
            stdout.put("and => &", nl);
            stdout.put("Your Input: ");
            stdin.flushInput();
            stdin.get(operator);

            mov(0, eax);
            mov(operand1, eax);
            if (operator == '^') then
                xor(operand2, eax);
                break;
            elseif (operator == '|') then
                or(operand2, eax);
                break;
            elseif (operator == '&') then
                and(operand2, eax);
                break;
            else
                stdout.put("Invalid input, please try again", nl);
            endif;
        endfor;

        /*Output the reusltant*/
        stdout.newln();
        stdout.newln();

        stdout.put("==============Output====================", nl);
        
        stdout.put("==========Decimal Format==========", nl);
        stdout.put("Operand1: ", operand1, nl);
        stdout.put("Operator: ", operator, nl);
        stdout.put("Operand2: ", operand2, nl);
        stdout.put("Result: ");
        stdout.puti32(eax);
        stdout.newln();
        stdout.newln();

        stdout.put("==========Binary  Format==========", nl);
        Output_Binary(operand1);
        stdout.put(operator, nl);
        Output_Binary(operand2);
        stdout.put("================================", nl);
        Output_Binary(eax);

    endfor;
end bitwise;